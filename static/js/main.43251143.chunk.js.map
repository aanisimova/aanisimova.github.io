{"version":3,"sources":["components/Search.tsx","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Search","projectIds","baseSlug","React","search","setSearch","open","setOpen","data","useGetNodes","placeholder","onFocus","onSearch","onClick","window","location","href","slug","onClose","isOpen","searchResults","Navbar","useState","mobileMenu","setMobileMenu","setBaseSlug","useLocation","useEffect","pathname","split","slice","toString","className","to","alt","src","target","rel","App","exact","path","projectId","basePath","router","collapseTableOfContents","hideMocking","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.43251143.chunk.js","sourcesContent":["import type { NodeSearchResult } from \"@stoplight/elements-dev-portal\";\nimport { Search as ElementsSearch, useGetNodes } from \"@stoplight/elements-dev-portal\";\nimport * as React from \"react\";\n\nexport type SearchProps = {\n  projectIds: string[];\n  baseSlug: string[];\n};\n\nexport const Search = ({ projectIds, baseSlug }: SearchProps) => {\n  const [search, setSearch] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const { data } = useGetNodes({\n    search,\n    projectIds,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setSearch(\"\");\n  };\n\n  const handleClick = (data: NodeSearchResult) => {\n    window.location.href = `../${baseSlug}/${data.slug}`;\n  };\n\n  return (\n    <>\n      <input placeholder=\"\" onFocus={() => setOpen(true)} />\n      <ElementsSearch search={search} onSearch={setSearch} onClick={handleClick} onClose={handleClose} isOpen={open} searchResults={data} />\n    </>\n  );\n};\n","import { NavLink, Link, useLocation } from 'react-router-dom'\nimport { useState } from 'react'\nimport { Search } from './Search';\nimport { useEffect } from 'react';\n\nconst Navbar = () => {\n    const [mobileMenu, setMobileMenu] = useState(false);\n    const [baseSlug, setBaseSlug] = useState('');\n\n    let location = useLocation();\n\n    useEffect(() => {\n        setBaseSlug(location.pathname.split('/').slice(1, 2).toString())\n    }, [location.pathname])\n\n    return (\n        <header>\n            <nav className=\"navbar\">\n                <div className='navbar-icons'>\n                    <Link to='/' className=\"navbar-icons_brand\">\n                        <img alt=\"unlimint-logo\" src=\"https://www.unlimint.com/wp-content/themes/unlimint/assets/images/logo.svg\"></img>\n                    </Link>\n                    <button onClick={() => { setMobileMenu(!mobileMenu) }} className={`navbar-icons_burger ${mobileMenu && 'expanded'}`}></button>\n                </div>\n                {mobileMenu && <ul className=\"nav-list_mobile\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/doc-guides\">Integration Guides</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/api-reference\">API Reference</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"https://documenter.getpostman.com/view/10451813/SzKSTzVu\" target=\"_blank\" rel=\"noreferrer\">Postman Collection</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"navbar-external-link\" href=\"https://unlimint.com/ma/\" target=\"_blank\" rel=\"noreferrer\">Sign In</a>\n                    </li>\n                </ul>}\n                <ul className=\"nav-list_desktop\">\n                    <li className=\"nav-item search\">\n                        {baseSlug === 'doc-guides' && <Search projectIds={['cHJqOjE1NzY5MQ']} baseSlug={[baseSlug]} />}\n                        {baseSlug === 'api-reference' && <Search projectIds={['cHJqOjE1NzY5Mw']} baseSlug={[baseSlug]} />}\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/doc-guides\" onClick={() => setBaseSlug('doc-guides')}>Integration Guides</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/api-reference\" onClick={() => setBaseSlug('api-reference')}>API Reference</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"https://documenter.getpostman.com/view/10451813/SzKSTzVu\" target=\"_blank\" rel=\"noreferrer\">Postman Collection</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"navbar-external-link\" href=\"https://unlimint.com/ma/\" target=\"_blank\" rel=\"noreferrer\">Sign In</a>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navbar","import { StoplightProject, DevPortalProvider } from '@stoplight/elements-dev-portal';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport '@stoplight/elements-dev-portal/styles.min.css';\nimport Navbar from './components/Navbar.js';\n\nfunction App() {\n\n  return (\n    <DevPortalProvider>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' >\n            <Redirect to='/doc-guides' />\n          </Route>\n          <Route path='/doc-guides' >\n            <StoplightProject\n              projectId=\"cHJqOjE1NzY5MQ\"\n              basePath=\"/doc-guides\"\n              router=\"history\"\n              collapseTableOfContents=\"true\"\n              hideMocking=\"true\"\n            />\n          </Route>\n          <Route path='/api-reference' >\n            <StoplightProject\n              projectId=\"cHJqOjE1NzY5Mw\"\n              basePath=\"/api-reference\"\n              router=\"history\"\n              collapseTableOfContents=\"true\"\n              hideMocking=\"true\"\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </DevPortalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}